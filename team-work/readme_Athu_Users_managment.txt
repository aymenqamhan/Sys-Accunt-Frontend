ملف إعداد المشروع — وحدة المصادقة وإدارة المستخدمين

-----------------------------------------------------------------

أ. وحدة المصادقة (Authentication Module)

تم تطبيق نظام مصادقة متكامل وآمن يشمل الميزات التالية:

- صفحة تسجيل الدخول:
  - يسمح للمستخدمين بتسجيل الدخول باستخدام البريد الإلكتروني وكلمة المرور.
  - عند النجاح يتم حفظ access token و refresh token في localStorage، بالإضافة إلى بيانات المستخدم لعرضها في الهيدر.

- صفحة إنشاء حساب:
  - يمكن للمستخدمين الجدد إنشاء حساب.
  - بعد التسجيل يتم توجيه المستخدم إلى خطوة تفعيل البريد الإلكتروني.

- تفعيل البريد الإلكتروني:
  - صفحة مخصصة لإدخال رمز التحقق (OTP) المرسل إلى البريد الإلكتروني لتفعيل الحساب.
  - تحتوي على زر "إعادة إرسال الرمز" مع مؤقت لمدة 60 ثانية.

- تجديد الجلسة تلقائيًا:
  - تم تحسين axios.js باستخدام interceptors التي تستخدم refreshToken للحصول على accessToken جديد عند انتهاء الصلاحية.
  - يوفر ذلك تجربة استخدام سلسة دون انقطاع.

- تسجيل الخروج:
  - زر تسجيل الخروج موجود في الهيدر للمستخدمين المسجلين.
  - عند الضغط عليه تُمسح بيانات الجلسة من المتصفح ويتم إعادة التوجيه إلى صفحة تسجيل الدخول.

- تغيير كلمة المرور:
  - صفحة مخصصة للمستخدمين لتغيير كلمة المرور عن طريق إدخال كلمة المرور القديمة والجديدة.

- نسيت كلمة المرور:
  - تم إنشاء صفحة أولية لعملية "نسيت كلمة المرور" تسمح للمستخدمين بطلب إعادة تعيين كلمة المرور.

-----------------------------------------------------------------

ب. وحدة إدارة المستخدمين (User Management Module)

هذه الوحدة متاحة للمستخدمين ذوي الصلاحيات الإدارية (admin/staff) لإدارة جميع حسابات المستخدمين في النظام.

- صفحة قائمة المستخدمين:
  - تعرض جميع المستخدمين المسجلين في جدول مع المعلومات الرئيسية (اسم المستخدم، الاسم الكامل، البريد الإلكتروني، إلخ).

- وظائف CRUD كاملة:
  - إنشاء (Create): يمكن للمدراء إضافة مستخدمين جدد من خلال نموذج مخصص.
  - قراءة (Read): يمكن للمدراء عرض جميع المستخدمين وتفاصيل مستخدم معين.
  - تحديث (Update): صفحة النموذج تعمل أيضًا كصفحة "تعديل"، مما يسمح بتحديث معلومات المستخدم (الاسم الكامل، الهاتف، كلمة المرور) وحالته (is_active, is_staff).
  - حذف (Delete): يمكن للمدراء حذف المستخدمين مباشرة من صفحة قائمة المستخدمين مع رسالة تأكيد.

- مسارات محمية:
  - الوصول إلى صفحات الإدارة غير مسموح إلا للمستخدمين المصرح لهم (المستخدمون الذين لديهم حالة staff/superuser في الـ Backend).

-----------------------------------------------------------------

2. خطوات الإعداد والتشغيل للفريق

للحصول على أحدث نسخة وتشغيل المشروع محليًا، اتبع الخطوات التالية بالترتيب:

الخطوة 1: الحصول على آخر تحديثات الكود

Bash:

```
git pull origin main
```

الخطوة 2: تثبيت الاعتماديات الجديدة

Bash:

```
npm install
```

الخطوة 3: التأكد من تشغيل الخادم الخلفي (Backend)

- تحتاج الواجهة الأمامية إلى الـ API لتعمل. تأكد من تشغيل الخادم الخلفي المحلي.

Bash:

```
python manage.py runserver
```

الخطوة 4: منح حسابك صلاحيات المدير (خطوة ضروري لاختبار صفحات الإدارة)

- إذا واجهت خطأ "Permission Denied" عند الدخول إلى صفحات الإدارة، قم بتشغيل Django shell ومنح الصلاحيات لحسابك:

Python (في طرفية الـ Backend):

```
from django.contrib.auth import get_user_model
User = get_user_model()
u = User.objects.get(username='your_username')
u.is_staff = True
u.is_superuser = True
u.save()
exit()
```

- استبدل 'your_username' باسم المستخدم الفعلي الخاص بك.

الخطوة 5: تشغيل تطبيق الواجهة الأمامية (Frontend)

Bash:

```
npm start
```

- سيفتح التطبيق في المتصفح ويمكنك الآن اختبار عمليات تسجيل الدخول، إنشاء الحساب، وتدفق إدارة المستخدمين.
